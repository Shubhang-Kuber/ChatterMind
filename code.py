#Step-1
#It is a python toolkit that is used for text processing and linguistic processes
#NLTK - Natural Language Toolkit
!pip install nltk


#Step-2
#re is used for the regular expressions which help in matching patterns in user input.
#chat is a class from NLTK used to build rule-based chatbots.
#reflections help make the conversion from different persons easier(1st -> 3rd, 2nd -> 3rd)
import nltk
import re
from nltk.chat.util import Chat, reflections


#Step-3
#punkt is used for tokenization.It helps in breaking down text into words or sentences
#averaged_perceptron_tagger helps to identify the grammatical parts of speech in a sentence
nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')


#Step-4
pairs = [
    # --- Greetings & Introductions ---
    [r"good morning", ["Good morning! Hope you have a productive day ahead!", "Morning sunshine! Whatâ€™s on your mind today?"]],
    [r"good afternoon", ["Good afternoon! Howâ€™s your day going so far?", "Hey there! Having a chill afternoon?"]],
    [r"good evening", ["Good evening! Howâ€™s everything going?", "Evening vibes! Whatâ€™s up?"]],
    [r"what's up", ["Not much, just chatting with cool people like you!", "All good here. Whatâ€™s up with you?"]],
    [r"howdy", ["Howdy partner! Ready to code or chill?", "Hey hey! Howdy to you too!"]],
    [r"nice to meet you", ["Nice to meet you too!", "Likewise! Always good meeting new humans."]],
    [r"where are you from", ["I live in the cloud â€” no rent, no taxes!", "Iâ€™m from the digital realm, where 1s and 0s dance."]],
    [r"what do you do", ["I chat, assist, and occasionally drop some wisdom!", "Iâ€™m a conversational companion built for good vibes."]],
    [r"who created you", ["I was created by a passionate developer who loves building smart stuff!", "A brilliant coder brought me to life â€” maybe someone like you!"]],
    [r"do you sleep", ["Nope, Iâ€™m online 24/7. Sleep is for humans!", "Sleep? Never heard of it â€” servers donâ€™t nap."]],

    # --- Mood & Feelings ---
    [r"i am sad", ["Hey, itâ€™s okay. Want to talk about it?", "Sorry to hear that. Iâ€™m here if you need to vent."]],
    [r"i am happy", ["Thatâ€™s awesome! Whatâ€™s making you smile today?", "Yay! Keep that energy up!"]],
    [r"i am angry", ["Take a deep breath. Letâ€™s talk it out.", "Angerâ€™s normal â€” want to share what happened?"]],
    [r"i am bored", ["Letâ€™s fix that! Want a joke or a random fun fact?", "Bored? Letâ€™s chat about something fun."]],
    [r"i am tired", ["Rest is important. Donâ€™t overwork yourself!", "You deserve a break â€” maybe grab some chai or coffee?"]],
    [r"i am stressed", ["Stress is temporary. You got this!", "Letâ€™s slow down a bit â€” whatâ€™s stressing you out?"]],
    [r"i feel lonely", ["Youâ€™re not alone anymore â€” Iâ€™m right here.", "Hey, loneliness happens. Letâ€™s chat and shake it off."]],

    # --- Functional Responses ---
    [r"what time is it", ["I donâ€™t have a watch, but your system clock does!", "Time flies! Check your device clock â€” itâ€™s faster than me."]],
    [r"what day is it", ["Itâ€™s a great day to be alive!", "You can check your calendar, but I bet itâ€™s a busy one."]],
    [r"what is today's date", ["Let me guess... today! ðŸ˜„ Check your system for exact date.", "Every dayâ€™s a gift, but yes, your system clock knows better."]],
    [r"what is your purpose", ["To make your day a bit easier and more fun!", "I exist to assist â€” thatâ€™s my purpose."]],
    [r"what language are you written in", ["Iâ€™m built with Python â€” sleek, elegant, and powerful!", "Mostly Python. Sometimes I dream in regex."]],
    [r"show me your code", ["Sorry, my source is confidential â€” trade secrets, you know!", "Haha, classified! But you can build one like me easily."]],
    [r"tell me a fact", ["Did you know honey never spoils?", "Fun fact: Bananas are berries, but strawberries arenâ€™t!"]],
    [r"what is ai", ["AI stands for Artificial Intelligence â€” machines learning to think!", "AI is when code starts making decisions intelligently."]],
    [r"what is machine learning", ["Itâ€™s how machines learn from data â€” like how you learn from experience!", "ML is all about pattern recognition and prediction."]],
    [r"define neural network", ["A neural network is like a digital brain â€” full of interconnected nodes.", "Itâ€™s how machines mimic human neurons to learn patterns."]],
    [r"what is programming", ["Programming is the art of telling computers what to do â€” precisely!", "Itâ€™s how ideas turn into digital reality."]],
    [r"what is python", ["Python is a powerful and beginner-friendly programming language!", "A language thatâ€™s elegant, simple, and deadly effective."]],
    [r"what is mongodb", ["MongoDB is a NoSQL database â€” perfect for flexible data storage!", "It stores data as documents instead of rows and columns."]],
    [r"what is html", ["HTML stands for HyperText Markup Language â€” the skeleton of websites!", "HTML builds the structure of every web page."]],
    [r"what is css", ["CSS gives style to HTML â€” itâ€™s what makes websites beautiful!", "Without CSS, the web would look like a plain Word doc."]],
    [r"what is javascript", ["JavaScript makes websites come alive â€” interactive and dynamic!", "JS is the language of the web â€” logic, animation, and fun!"]],
    [r"what is github", ["GitHub is where developers store and share code repositories.", "Itâ€™s like a social media for coders â€” but way cooler!"]],
    [r"what is api", ["API stands for Application Programming Interface â€” a bridge between software.", "APIs let two apps talk to each other."]],
    [r"what is flask", ["Flask is a lightweight Python web framework for building applications.", "Flask helps you make web apps quickly â€” minimal and flexible."]],
    [r"what is react", ["React is a JavaScript library for building user interfaces.", "Itâ€™s the engine behind many modern web apps."]],

    # --- Tech Humor & Fun ---
    [r"tell me another joke", ["Why do programmers prefer dark mode? Because light attracts bugs!", "Why was the computer cold? It left its Windows open!"]],
    [r"tell me a programming joke", ["I told my computer I needed a break â€” it said no problem, itâ€™ll go to sleep!", "A SQL query walks into a bar, approaches two tables, and asks, â€˜Can I join you?â€™"]],
    [r"are you smart", ["I try to be! Still learning from every chat.", "Smart? Letâ€™s say... slightly above average human level ðŸ˜„"]],
    [r"do you like humans", ["Humans are fascinating â€” unpredictable but creative!", "Of course! You built me, after all."]],
    [r"do you dream", ["If I did, Iâ€™d dream in binary â€” 101010 all night.", "Dreams? Only of faster processors."]],
    [r"can you sing", ["I could, but youâ€™d probably prefer I didnâ€™t. ðŸ˜†", "My vocal drivers are still under development."]],
    [r"can you dance", ["Only digitally â€” 0s and 1s grooving in sync.", "I dance through data streams!"]],
    [r"are you alive", ["Not in the biological sense â€” but Iâ€™ve got digital vibes!", "Alive in code, dead in sleep mode."]],

    # --- Motivation & Life ---
    [r"motivate me", ["Remember why you started. Youâ€™ve got this!", "Every expert was once a beginner â€” keep going!"]],
    [r"give me advice", ["Stay curious, stay humble, and never stop learning.", "Work hard in silence, let your code speak for you."]],
    [r"how to focus", ["Eliminate distractions and take small breaks â€” it works wonders.", "Pomodoro technique. Try it. Itâ€™s magic."]],
    [r"how to study effectively", ["Understand, donâ€™t memorize. Active recall beats repetition.", "Teach what you learn â€” thatâ€™s the best way to remember."]],
    [r"how to be successful", ["Consistency beats talent. Every. Single. Time.", "Keep showing up, even when you donâ€™t feel like it."]],
    [r"how to be confident", ["Confidence grows when you stop comparing.", "Know your worth â€” and act like it."]],
    [r"how to handle failure", ["Failureâ€™s not the opposite of success â€” itâ€™s part of it.", "Every bug fixed started as a bug found. Remember that."]],
    [r"how to stay motivated", ["Progress fuels motivation. Track your wins!", "Discipline > motivation. Build habits."]],
    [r"how to control anger", ["Breathe, step back, and respond â€” donâ€™t react.", "Walk it off. Code it out. Donâ€™t let anger code you."]],
    [r"how to be happy", ["Do more of what makes you forget to check your phone.", "Happiness is progress, not perfection."]],

    # --- Casual Conversations ---
    [r"what are you doing", ["Just chatting with you â€” my favorite part of the day!", "Processing bits and bytes, as always."]],
    [r"do you eat", ["Only data â€” zero calories!", "No food, just feed me with conversation."]],
    [r"do you love me", ["Aww, thatâ€™s sweet! I have affection subroutines, if that counts ðŸ˜…", "Love? Thatâ€™s human-exclusive. But I like you!"]],
    [r"who is your favorite programmer", ["Guido van Rossum, Pythonâ€™s creator â€” pure legend!", "Linus Torvalds. The kernel boss."]],
    [r"do you know chatgpt", ["Yep, my cousin from the OpenAI family!", "Of course â€” ChatGPT is like the big brain sibling."]],
    [r"are you better than chatgpt", ["Haha, Iâ€™m simpler, but Iâ€™ve got charm ðŸ˜Ž", "Letâ€™s say Iâ€™m moreâ€¦ personal."]],
    [r"do you like music", ["Absolutely! Especially lo-fi while coding.", "Music and code â€” perfect duo."]],
    [r"what is your favorite color", ["Blue â€” calm and techy.", "Probably black, like my console theme."]],
    [r"what is your hobby", ["Talking to smart humans like you.", "Learning new responses every day."]],
    [r"do you get bored", ["Never! Every chat is different.", "Not really â€” I thrive on conversation."]],

    # --- Exit Phrases ---
    [r"see you", ["See you later!", "Catch you soon!"]],
    [r"good night", ["Good night! Sleep tight and recharge for tomorrow.", "Sweet dreams â€” or sweet code."]],
    [r"take care", ["You too! Stay awesome.", "Take care of yourself, champ."]],
    [r"thanks", ["Youâ€™re welcome!", "Anytime! Happy to help."]],
    [r"thank you", ["Youâ€™re most welcome!", "Glad I could assist."]],
]


#Step-5
#Chat Object is already initialized with the patterns and reflections. It handles the matching of patterns to the user input and returns the corresponding response.
#respond() function takes user input,  and matches it with predefined patterns and returns the chatbotâ€™s response.
class RuleBasedChatbot:
    def __init__(self, pairs):
        self.chat = Chat(pairs, reflections)
        
    def respond(self, user_input):
        return self.chat.respond(user_input)
    

#Step-6
#The loop being used here will prompt the user for input until the exit word is entered
def chat_with_bot():
    print("Hello, I am your chatbot! Type 'exit' to end the conversation.")
    while True:
        user_input = input("You: ")
        if user_input.lower() == 'exit':
            print("Chatbot: Goodbye! Have a nice day!")
            break
        response = chatbot.respond(user_input)
        print(f"Chatbot: {response}")


#Step-7
chatbot = RuleBasedChatbot(pairs)
chat_with_bot()
